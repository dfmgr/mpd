#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="getart"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 031520211823-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : getart --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Monday, Mar 15, 2021 18:23 EDT
# @File          : getart
# @Description   : returns album art for the "artist - album" input string
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function file
if [ -f "$SRC_DIR/functions.bash" ]; then
  FUNCTIONS_DIR="$SRC_DIR"
  . "$FUNCTIONS_DIR/functions.bash"
elif [ -f "$HOME/.local/bin/functions.bash" ]; then
  FUNCTIONS_DIR="$HOME/.local/bin"
  . "$FUNCTIONS_DIR/functions.bash"
else
  printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $FUNCTIONS_DIR"
  return 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# helper function
__version() { app_version; }
__help() {
  app_help "Usage: getart  -  getart --version" \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
main() {
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # options
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Required app check
  cmd_exists --error bash wget || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  local mpdserver="${MPDSERVER:-localhost}"
  [[ -z "$ARTDIR" ]] && ARTDIR="$HOME/.cache/albumart"
  [[ -d "$ARTDIR" ]] || mkdir -p "$ARTDIR"
  declare mpccurrent artfile
  mpccurrent="$(echo "$@" | sed -r 's/(\[|\]|\,)//g')"
  artfile=$(find "$ARTDIR" -iname "${mpccurrent}*")
  [[ -z "$artfile" ]] && am_i_online && {
    useragent='Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:31.0) Gecko/20100101 Firefox/31.0'
    link imagelink ext imagepath 2>/dev/null
    link="www.google.com/search?q=$(urlencode "$mpccurrent")\&tbm=isch"
    imagelinks=$(timeout 10s wget -e robots=off --user-agent "$useragent" -o /dev/null -qO - "$link" |
      sed 's/</\n</g' | grep "ou\":\"http" | sed -nr 's/.*ou\":\"([^"]+).*/\1/p')
    for imagelink in $imagelinks; do
      imagelink=$(echo "$imagelink" | sed -nr 's/(.*\.(jpg|jpeg|png)).*/\1/p')
      ext=$(echo "$imagelink" | sed -nr 's/.*(\.(jpg|jpeg|png)).*/\1/p')
      imagepath="${ARTDIR}/${mpccurrent}${ext}"
      timeout 10s wget --max-redirect 0 -o /dev/null -qO "$imagepath" "${imagelink}"
      [[ -s "$imagepath" ]] && break
      rm "$imagepath" # remove zero length file
    done
    artfile=$(find "$ARTDIR" -iname "${mpccurrent}*")
  }
  echo "$artfile"
  return "${exitCode:-$?}"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
